<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Database\Database;
use Drupal\Core\Database\Connection;
use Drupal\Core\Database\DatabaseException;
use Drupal\Core\Database\Query\Condition;
use Drupal\Core\Database\Query\Select;
use Drupal\Core\Mail\MailManagerInterface;
use Drupal\Core\Render\RenderContext;
use Drupal\Core\Render\RendererInterface;
use Drupal\Core\Url;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Drupal\file\Entity\File;

/**
 * Implements hook_install().
 */
function pfe_med_connect_install() {
  pfe_med_connect_create_table();
}

/**
 * Implements hook_update_N().
 */
function pfe_med_connect_update_8001() {
  pfe_med_connect_create_table();
}

/**
 * Create the custom table.
 */
function pfe_med_connect_create_table() {
  $table_name = 'custom_table';
  $schema = \Drupal::database()->schema();

  try {
    if ($schema->tableExists($table_name)) {
      $schema->dropTable($table_name);
    }
    $schema->createTable($table_name, pfe_med_connect_get_table_schema());
    drupal_set_message('Created the custom table.');
  }
  catch (SchemaObjectExistsException $e) {
    drupal_set_message('The custom table already exists.', 'warning');
  }
  catch (SchemaObjectDoesNotExistException $e) {
    drupal_set_message('Failed to create the custom table: ' . $e->getMessage(), 'error');
  }
}

/**
 * Get the schema definition for the custom table.
 */
function pfe_med_connect_get_table_schema() {
  $schema = [
    'description' => 'Custom table for storing data.',
    'fields' => [
      'product' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The product name.',
      ],
      'therapeutic_area' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The therapeutic area.',
      ],
      'district' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The district.',
      ],
      'msl_email' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The MSL email address.',
      ],
      'backup_email' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The backup email address.',
      ],
    ],
    'primary key' => ['product', 'therapeutic_area', 'district'],
  ];

  return $schema;
}

/**
 * Implements hook_form_FORM_ID_alter() for the custom form.
 */
function pfe_med_connect_form_pfe_med_connect_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#submit'][] = 'pfe_med_connect_form_submit';
}

/**
 * Form submission handler for the custom form.
 */
function pfe_med_connect_form_submit(&$form, FormStateInterface $form_state) {
  $csv_file = $form_state->getValue('csv_file');
  
  if (!empty($csv_file[0])) {
    $file = File::load($csv_file[0]);

    if ($file instanceof Drupal\file\Entity\File) { // Check if $file is an instance of File
      $file_path = $file->getFileUri();

      // Process the CSV file.
      $data = pfe_med_connect_process_csv_file($file_path);

      if (!empty($data)) {
        // Truncate the custom_table before inserting new data.
        pfe_med_connect_truncate_table();

        // Insert the data into the custom_table.
        pfe_med_connect_insert_data($data);

        drupal_set_message('CSV data has been processed and stored in the custom_table.');
      } else {
        drupal_set_message('Failed to process the CSV file or no data found.', 'error');
      }
    } else {
      drupal_set_message('Failed to load the uploaded file.', 'error');
    }
  } else {
    drupal_set_message('No CSV file uploaded.', 'error');
  }
}

/**
 * Process the CSV file and return the data as an array.
 */
function pfe_med_connect_process_csv_file($file_path) {
  $data = [];

  if (($handle = fopen($file_path, 'r')) !== FALSE) {
    while (($row = fgetcsv($handle, 1000, ',')) !== FALSE) {
      // Skip the header row.
      if ($row[0] !== 'product') {
        $data[] = [
          'product' => $row[0],
          'therapeutic_area' => $row[1],
          'district' => $row[2],
          'msl_email' => $row[3],
          'backup_email' => $row[4],
        ];
      }
    }

    fclose($handle);
  }

  return $data;
}

/**
 * Truncate the custom_table.
 */
function pfe_med_connect_truncate_table() {
  $table_name = 'custom_table';

  try {
    $connection = Database::getConnection();
    $connection->truncate($table_name)->execute();
  }
  catch (DatabaseException $e) {
    drupal_set_message('Failed to truncate the custom_table: ' . $e->getMessage(), 'error');
  }
}

/**
 * Insert the data into the custom_table.
 */
function pfe_med_connect_insert_data($data) {
  $table_name = 'custom_table';

  try {
    $connection = Database::getConnection();
    $connection->insert($table_name)
      ->fields(['product', 'therapeutic_area', 'district', 'msl_email', 'backup_email'])
      ->values($data)
      ->execute();
  }
  catch (DatabaseException $e) {
    drupal_set_message('Failed to insert data into the custom_table: ' . $e->getMessage(), 'error');
  }
}
